[{"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\App.js":"1","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\modals\\EditTask.js":"2","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\components\\TodoList.js":"3","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\index.js":"4","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\modals\\CreateTask.js":"5","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\api.js":"6","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\components\\Card.js":"7","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\pages\\login.jsx":"8","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\pages\\register.jsx":"9"},{"size":725,"mtime":1659870752268,"results":"10","hashOfConfig":"11"},{"size":1770,"mtime":1659601797061,"results":"12","hashOfConfig":"11"},{"size":1779,"mtime":1659590831133,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1659519115012,"results":"14","hashOfConfig":"11"},{"size":1702,"mtime":1659591339938,"results":"15","hashOfConfig":"11"},{"size":619,"mtime":1659552993160,"results":"16","hashOfConfig":"11"},{"size":1933,"mtime":1659590852744,"results":"17","hashOfConfig":"11"},{"size":815,"mtime":1659870397767,"results":"18","hashOfConfig":"11"},{"size":1273,"mtime":1659871139124,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19prcf2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\App.js",["41"],"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\modals\\EditTask.js",["42"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nconst EditTaskPopup = ({ modal, toggle, updateTask, taskObj }) => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj[\"Name\"] = taskName;\n    tempObj[\"Description\"] = description;\n    updateTask(tempObj);\n    toggle();\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n      <ModalBody>\n        <div className=\"form-group\">\n          <label>Task Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={taskName}\n            onChange={handleChange}\n            name=\"taskName\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            rows=\"5\"\n            className=\"form-control\"\n            value={description}\n            onChange={handleChange}\n            name=\"description\"\n          ></textarea>\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"primary\" onClick={handleUpdate}>\n          Update\n        </Button>\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTaskPopup;\n","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\components\\TodoList.js",[],"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\index.js",[],["43","44"],"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\modals\\CreateTask.js",[],"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\api.js",[],"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\components\\Card.js",[],"C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\pages\\login.jsx",["45","46"],"import React, { useState } from \"react\";\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSave = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form>\r\n        <input type=\"email\" name=\"email\" required onChange={handleChange} />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" onClick={handleSave}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\hp\\Desktop\\task\\React-todo-list-master\\src\\pages\\register.jsx",["47","48","49"],{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"55","line":21,"column":6,"nodeType":"56","endLine":21,"endColumn":8,"suggestions":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"50","severity":1,"message":"62","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":15},{"ruleId":"50","severity":1,"message":"63","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":18},{"ruleId":"50","severity":1,"message":"64","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},{"ruleId":"50","severity":1,"message":"62","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":15},{"ruleId":"50","severity":1,"message":"63","line":6,"column":10,"nodeType":"52","messageId":"53","endLine":6,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["65"],"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'email' is assigned a value but never used.","'password' is assigned a value but never used.","'userName' is assigned a value but never used.",{"desc":"68","fix":"69"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"70","text":"71"},[584,586],"[taskObj.Description, taskObj.Name]"]